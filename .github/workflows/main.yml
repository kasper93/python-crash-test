name: 'main'

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: ucrt64, env: ucrt-x86_64  }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64  }
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            mingw-w64-${{matrix.env}}-python
            mingw-w64-${{matrix.env}}-meson
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-cc

      - uses: actions/checkout@v3

      - run: |
          # Define custom type for calling SetErrorMode from the Windows API
          Add-Type -TypeDefinition @"
          using System;
          using System.Runtime.InteropServices;

          public class ErrorModeHelper
          {
              [DllImport("kernel32.dll")]
              public static extern uint SetErrorMode(uint uMode);

              [DllImport("kernel32.dll")]
              public static extern uint GetErrorMode();
          }
          "@

          $ErrorMode = 0x0001 -bor 0x0002 # SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX

          [ErrorModeHelper]::SetErrorMode($ErrorMode)

          $env:PATH="D:/a/_temp/msys64/ucrt64/bin;$env:PATH"
          cd project
          meson setup _build
          cd _build
          ninja
