name: 'main'

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - run: |
          # Set SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX)
          Add-Type -TypeDefinition @"
          using System;
          using System.Runtime.InteropServices;
          public class ErrorModeHelper
          {
              [DllImport("kernel32.dll")]
              public static extern uint SetErrorMode(uint uMode);
          }
          "@
          $ErrorMode = 0x0001 -bor 0x0002 # SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX
          [ErrorModeHelper]::SetErrorMode($ErrorMode)

          # Install meson, ninja and add GCC to PATH
          pipx install meson
          pipx install ninja
          $env:PATH="C:\msys64\mingw64\bin;$env:PATH"

          # See where things are comming from
          (Get-Command meson).Path
          (Get-Command ninja).Path
          (Get-Command gcc).Path
          (Get-Command python).Path

          # Build the meson project
          cd project
          meson setup _build
          cd _build
          ninja
